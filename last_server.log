2025-07-15T18:18:26.699+09:00  INFO 42994 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 42994 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T18:18:26.702+09:00 DEBUG 42994 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T18:18:26.702+09:00  INFO 42994 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T18:18:27.075+09:00  INFO 42994 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:18:27.109+09:00  INFO 42994 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 11 JPA repository interfaces.
2025-07-15T18:18:27.455+09:00  INFO 42994 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T18:18:27.464+09:00  INFO 42994 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T18:18:27.464+09:00  INFO 42994 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T18:18:27.492+09:00  INFO 42994 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T18:18:27.492+09:00  INFO 42994 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 766 ms
2025-07-15T18:18:27.565+09:00  INFO 42994 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:18:27.592+09:00  INFO 42994 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T18:18:27.607+09:00  INFO 42994 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:18:27.815+09:00  INFO 42994 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:18:27.829+09:00  INFO 42994 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T18:18:27.979+09:00  INFO 42994 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32b95de
2025-07-15T18:18:27.980+09:00  INFO 42994 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T18:18:28.029+09:00  WARN 42994 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:18:28.038+09:00  INFO 42994 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:18:28.773+09:00  INFO 42994 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T18:18:29.061+09:00 DEBUG 42994 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T18:18:29.097+09:00  WARN 42994 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T18:18:29.208+09:00  INFO 42994 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:18:29.413+09:00 DEBUG 42994 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T18:18:29.468+09:00  INFO 42994 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T18:18:30.126+09:00  INFO 42994 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T18:18:30.127+09:00  WARN 42994 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T18:18:30.403+09:00  WARN 42994 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:18:30.632+09:00 DEBUG 42994 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T18:18:30.793+09:00  INFO 42994 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T18:18:30.798+09:00  INFO 42994 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 4.31 seconds (process running for 4.457)
2025-07-15T18:18:30.827+09:00 DEBUG 42994 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T18:18:37.647+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15T18:18:37.649+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-15T18:18:37.652+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-07-15T18:18:37.664+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T18:18:37.669+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:37.670+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T18:18:37.687+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T18:18:37.687+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:37.687+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T18:18:37.753+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo0119@gmail.com, password: test0119!
2025-07-15T18:18:37.877+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:37.896+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:18:37.997+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T18:18:38.047+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.417+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags/popular?limit=10
2025-07-15T18:18:38.417+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?page=0&size=10
2025-07-15T18:18:38.417+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags
2025-07-15T18:18:38.417+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags/popular?limit=10
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me
2025-07-15T18:18:38.418+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?page=0&size=10
2025-07-15T18:18:38.420+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T18:18:38.420+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T18:18:38.421+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T18:18:38.421+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T18:18:38.462+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.462+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.462+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.462+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.465+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:18:38.468+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T18:18:38.469+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:18:38.471+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T18:18:38.472+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:18:38.473+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:18:38.473+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo0119@gmail.com
2025-07-15T18:18:38.474+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T18:18:38.474+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T18:18:38.476+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T18:18:38.478+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T18:18:38.478+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T18:18:38.484+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T18:18:38.485+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T18:18:38.489+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T18:18:38.489+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:18:38.494+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T18:18:38.504+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T18:18:38.510+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:18:38.513+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.519+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.524+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T18:18:38.528+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.530+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:18:38.533+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.533+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:18:38.534+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.535+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.536+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:18:38.538+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.538+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:18:38.540+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.542+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.542+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T18:18:38.543+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.545+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.545+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.549+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.549+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.552+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T18:18:38.550+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T18:18:38.553+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.554+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.554+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.556+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.557+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.557+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T18:18:38.556+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.572+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.574+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T18:18:38.572+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.585+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.586+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.586+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:18:38.586+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.590+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.592+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.594+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.597+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.597+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.606+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.608+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:18:38.610+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.611+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.613+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.618+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:18:38.631+09:00  WARN 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-15T18:21:29.823+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T18:21:29.826+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:21:29.827+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T18:21:29.840+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T18:21:29.881+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:21:29.888+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:21:29.891+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T18:21:29.895+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10
2025-07-15T18:21:29.907+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T18:21:29.922+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T18:21:29.924+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:21:29.927+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T18:21:32.777+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/22/comments?page=0&size=10
2025-07-15T18:21:32.777+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:21:32.777+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/22/comments?page=0&size=10
2025-07-15T18:21:32.780+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/22/comments?page=0&size=10
2025-07-15T18:21:32.783+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:21:32.785+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:21:32.787+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/22/comments?page=0&size=10
2025-07-15T18:21:32.787+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 22, 페이지: 0, 크기: 10
2025-07-15T18:21:32.789+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T18:21:35.603+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/22/comments
2025-07-15T18:21:35.603+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:21:35.603+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/22/comments
2025-07-15T18:21:35.607+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/22/comments
2025-07-15T18:21:35.610+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:21:35.612+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:21:35.613+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/22/comments
2025-07-15T18:21:35.619+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 22, 사용자: domo0119@gmail.com
2025-07-15T18:21:35.624+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:21:35.628+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T18:21:35.631+09:00 ERROR 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.CommentController  : 댓글 작성 오류: 

java.lang.IllegalArgumentException: 사용자를 찾을 수 없습니다.
	at com.bootcampbox.server.service.CommentService.lambda$createComment$1(CommentService.java:38) ~[main/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.bootcampbox.server.service.CommentService.createComment(CommentService.java:38) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.CommentService$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.CommentController.createComment(CommentController.java:33) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.CommentController$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T18:21:41.465+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/22/comments
2025-07-15T18:21:41.490+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:21:41.496+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:21:41.497+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/22/comments
2025-07-15T18:21:41.505+09:00  INFO 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 22, 사용자: domo0119@gmail.com
2025-07-15T18:21:41.508+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:21:41.511+09:00 DEBUG 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T18:21:41.513+09:00 ERROR 42994 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 작성 오류: 

java.lang.IllegalArgumentException: 사용자를 찾을 수 없습니다.
	at com.bootcampbox.server.service.CommentService.lambda$createComment$1(CommentService.java:38) ~[main/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.bootcampbox.server.service.CommentService.createComment(CommentService.java:38) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.CommentService$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.CommentController.createComment(CommentController.java:33) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.CommentController$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T18:22:00.406+09:00  INFO 42994 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T18:22:00.417+09:00  INFO 42994 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T18:22:00.427+09:00  INFO 42994 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:22:00.432+09:00  INFO 42994 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T18:22:00.443+09:00  INFO 42994 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T18:22:03.025+09:00  INFO 43487 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 43487 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T18:22:03.026+09:00 DEBUG 43487 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T18:22:03.027+09:00  INFO 43487 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T18:22:03.401+09:00  INFO 43487 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:22:03.436+09:00  INFO 43487 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 11 JPA repository interfaces.
2025-07-15T18:22:03.772+09:00  INFO 43487 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T18:22:03.781+09:00  INFO 43487 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T18:22:03.781+09:00  INFO 43487 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T18:22:03.805+09:00  INFO 43487 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T18:22:03.805+09:00  INFO 43487 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 758 ms
2025-07-15T18:22:03.873+09:00  INFO 43487 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:22:03.899+09:00  INFO 43487 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T18:22:03.914+09:00  INFO 43487 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:22:04.045+09:00  INFO 43487 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:22:04.058+09:00  INFO 43487 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T18:22:04.142+09:00  INFO 43487 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d38db6f
2025-07-15T18:22:04.143+09:00  INFO 43487 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T18:22:04.174+09:00  WARN 43487 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:22:04.182+09:00  INFO 43487 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:22:04.756+09:00  INFO 43487 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T18:22:04.803+09:00 DEBUG 43487 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T18:22:04.831+09:00  WARN 43487 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T18:22:04.936+09:00  INFO 43487 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:22:05.124+09:00 DEBUG 43487 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T18:22:05.181+09:00  INFO 43487 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T18:22:05.775+09:00  INFO 43487 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T18:22:05.776+09:00  WARN 43487 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T18:22:06.042+09:00  WARN 43487 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:22:06.243+09:00 DEBUG 43487 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T18:22:06.384+09:00  INFO 43487 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T18:22:06.389+09:00  INFO 43487 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 3.571 seconds (process running for 3.734)
2025-07-15T18:22:06.415+09:00 DEBUG 43487 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T18:22:09.724+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15T18:22:09.728+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-15T18:22:09.731+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-07-15T18:22:09.747+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/22/comments
2025-07-15T18:22:09.857+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:22:09.869+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:22:09.882+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/22/comments
2025-07-15T18:22:10.001+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 22, 사용자: domo0119@gmail.com
2025-07-15T18:22:10.007+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:22:10.024+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T18:22:10.027+09:00 ERROR 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 작성 오류: 

java.lang.IllegalArgumentException: 사용자를 찾을 수 없습니다.
	at com.bootcampbox.server.service.CommentService.lambda$createComment$1(CommentService.java:38) ~[main/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.bootcampbox.server.service.CommentService.createComment(CommentService.java:38) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.CommentService$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.CommentController.createComment(CommentController.java:33) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.CommentController$$SpringCGLIB$$0.createComment(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T18:23:54.421+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.430+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:23:54.431+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.468+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.491+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:23:54.514+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:23:54.515+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.526+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.MyPageController   : 내가 쓴 글 목록 조회 요청: domo0119@gmail.com
2025-07-15T18:23:54.529+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:23:54.545+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.created_at 
    limit
        ?
2025-07-15T18:23:54.559+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:23:54.564+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.569+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.574+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.579+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.580+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.580+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.581+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.582+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.583+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.584+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.584+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.585+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.586+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.587+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.589+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.590+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.591+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.591+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.592+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.592+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.600+09:00  WARN 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-15T18:23:54.735+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.737+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:23:54.738+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:23:54.739+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me/posts?page=0&size=10
2025-07-15T18:23:54.743+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내가 쓴 글 목록 조회 요청: domo0119@gmail.com
2025-07-15T18:23:54.745+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:23:54.747+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.created_at 
    limit
        ?
2025-07-15T18:23:54.751+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:23:54.752+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.753+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.754+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.755+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.756+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.757+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.758+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.759+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.760+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.761+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.761+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.762+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.762+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.763+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.764+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.764+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.766+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.780+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:23:54.810+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:23:54.812+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=?
2025-07-15T18:24:12.074+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/logout
2025-07-15T18:24:12.075+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:24:12.075+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/logout
2025-07-15T18:24:12.078+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/logout
2025-07-15T18:24:12.080+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:12.082+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo0119@gmail.com, password: $2a$10$a0mOLkFZ0f4IHcrzXp99UuhdKhJgxiKOuS4ijmFWNHW.NxgSC4Pt2, authorities: [ROLE_USER]
2025-07-15T18:24:12.083+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/logout
2025-07-15T18:24:22.312+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T18:24:22.313+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:24:22.313+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T18:24:22.331+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: test0119!
2025-07-15T18:24:22.457+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.460+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:22.556+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T18:24:22.570+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.890+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T18:24:22.889+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T18:24:22.890+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T18:24:22.890+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T18:24:22.891+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.892+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.892+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.892+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.894+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:22.895+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T18:24:22.899+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:22.901+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T18:24:22.901+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T18:24:22.901+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:22.902+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T18:24:22.902+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:22.903+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T18:24:22.903+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T18:24:22.904+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T18:24:22.905+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T18:24:22.905+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T18:24:22.906+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T18:24:22.906+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T18:24:22.906+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T18:24:22.910+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:22.912+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.914+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:24:22.914+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:24:22.916+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.918+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.918+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T18:24:22.921+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.923+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.924+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.925+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.926+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.928+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.929+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.930+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.931+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.932+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.933+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.934+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.935+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.936+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:24:22.938+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:24:22.938+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T18:24:22.944+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.944+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T18:24:22.948+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:24:22.950+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.951+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.952+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.953+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.954+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.954+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.956+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.956+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.958+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T18:24:22.958+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.958+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.959+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.959+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.959+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.960+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.960+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.961+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T18:24:22.961+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.962+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.963+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:24:22.962+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:24:22.964+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T18:24:22.965+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:24:22.971+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T18:24:44.305+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/logout
2025-07-15T18:24:44.309+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:24:44.311+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T18:24:44.312+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/logout
2025-07-15T18:24:55.649+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/check-duplicate
2025-07-15T18:24:55.650+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:24:55.650+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/check-duplicate
2025-07-15T18:24:55.652+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/check-duplicate
2025-07-15T18:24:55.652+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:24:55.653+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/check-duplicate
2025-07-15T18:24:55.680+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 시작 ===
2025-07-15T18:24:55.680+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 요청 타입: email
2025-07-15T18:24:55.680+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 요청 값: 'test0119@gmail.com'
2025-07-15T18:24:55.680+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 요청 값 길이: 18
2025-07-15T18:24:55.680+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 요청 값 공백 제거 후: 'test0119@gmail.com'
2025-07-15T18:24:55.684+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-07-15T18:24:55.690+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 응답 메시지: 이미 사용 중인 이메일입니다.
2025-07-15T18:24:55.690+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 응답 isDuplicate: true
2025-07-15T18:24:55.690+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : 응답 available: false
2025-07-15T18:24:55.690+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 완료 ===
2025-07-15T18:25:04.361+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/check-duplicate
2025-07-15T18:25:04.369+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:04.369+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/check-duplicate
2025-07-15T18:25:04.370+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 시작 ===
2025-07-15T18:25:04.370+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 요청 타입: email
2025-07-15T18:25:04.370+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 요청 값: 'test1234@gmail.com'
2025-07-15T18:25:04.370+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 요청 값 길이: 18
2025-07-15T18:25:04.370+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 요청 값 공백 제거 후: 'test1234@gmail.com'
2025-07-15T18:25:04.371+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-07-15T18:25:04.372+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 응답 메시지: 사용 가능한 이메일입니다.
2025-07-15T18:25:04.372+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 응답 isDuplicate: false
2025-07-15T18:25:04.372+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : 응답 available: true
2025-07-15T18:25:04.372+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 완료 ===
2025-07-15T18:25:04.393+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/send-email-code
2025-07-15T18:25:04.394+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:04.394+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/send-email-code
2025-07-15T18:25:04.395+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/send-email-code
2025-07-15T18:25:04.395+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:04.395+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/send-email-code
2025-07-15T18:25:10.854+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/verify-email-code
2025-07-15T18:25:10.854+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:10.854+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/verify-email-code
2025-07-15T18:25:10.856+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/verify-email-code
2025-07-15T18:25:10.856+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:10.856+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/verify-email-code
2025-07-15T18:25:37.720+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/check-duplicate
2025-07-15T18:25:37.723+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:37.723+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/check-duplicate
2025-07-15T18:25:37.733+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 시작 ===
2025-07-15T18:25:37.733+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 요청 타입: nickname
2025-07-15T18:25:37.734+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 요청 값: '곰신테스터'
2025-07-15T18:25:37.734+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 요청 값 길이: 5
2025-07-15T18:25:37.734+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 요청 값 공백 제거 후: '곰신테스터'
2025-07-15T18:25:37.759+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.nickname=? 
    limit
        ?
2025-07-15T18:25:37.769+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 응답 메시지: 사용 가능한 닉네임입니다.
2025-07-15T18:25:37.769+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 응답 isDuplicate: false
2025-07-15T18:25:37.769+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : 응답 available: true
2025-07-15T18:25:37.769+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.DuplicateCheckController         : === 중복확인 요청 완료 ===
2025-07-15T18:25:39.643+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/signup
2025-07-15T18:25:39.643+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:39.643+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/signup
2025-07-15T18:25:39.646+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-07-15T18:25:39.646+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:39.646+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-07-15T18:25:39.658+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.UserController     : 회원가입 요청: test1234@gmail.com
2025-07-15T18:25:39.662+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-07-15T18:25:39.664+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-07-15T18:25:39.665+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.nickname=? 
    limit
        ?
2025-07-15T18:25:39.780+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, address_detail, boyfriend_branch, boyfriend_discharge_date, boyfriend_enlist_date, boyfriend_rank, boyfriend_unit, branch, created_at, discharge_date, email, enlist_date, fcm_token, is_active, military_rank, nickname, password, phone_number, role, total_bookmarks, total_comments, total_given_likes, total_posts, total_received_likes, unit, updated_at, user_type, username, zipcode) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-15T18:25:50.443+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T18:25:50.445+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:50.445+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T18:25:50.449+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test1234@gmail.com, password: poroli0119!
2025-07-15T18:25:50.453+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.457+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:50.579+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T18:25:50.581+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.896+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T18:25:50.896+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T18:25:50.896+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T18:25:50.897+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T18:25:50.899+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.899+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.899+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.900+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.902+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:50.902+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:50.902+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:50.903+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T18:25:50.903+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T18:25:50.903+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:50.903+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T18:25:50.904+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T18:25:50.904+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T18:25:50.904+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T18:25:50.904+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T18:25:50.905+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T18:25:50.905+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T18:25:50.905+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.MyPageController   : 내 정보 조회 요청: test1234@gmail.com
2025-07-15T18:25:50.907+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:50.907+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T18:25:50.908+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T18:25:50.908+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T18:25:50.912+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.913+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:25:50.913+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.914+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:25:50.915+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:25:50.916+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T18:25:50.916+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.918+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.919+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T18:25:50.919+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:25:50.922+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.922+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.923+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T18:25:50.923+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T18:25:50.925+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T18:25:50.925+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.925+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.925+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.926+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.926+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.926+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.927+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T18:25:50.928+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.928+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.928+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T18:25:50.929+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.930+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.930+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.932+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.933+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.934+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.934+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.935+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.935+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.935+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.936+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.936+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.936+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.937+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.937+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.937+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.938+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T18:25:50.939+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.941+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.944+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.946+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:50.947+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T18:25:53.294+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T18:25:53.296+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:53.298+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:53.298+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T18:25:53.300+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10
2025-07-15T18:25:53.304+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T18:25:53.312+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T18:25:53.314+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T18:25:53.317+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T18:25:55.134+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/comments
2025-07-15T18:25:55.134+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T18:25:55.134+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/comments
2025-07-15T18:25:55.139+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/23/comments
2025-07-15T18:25:55.142+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:25:55.144+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:25:55.145+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/23/comments
2025-07-15T18:25:55.147+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 23, 사용자: test1234@gmail.com
2025-07-15T18:25:55.148+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:25:55.151+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T18:25:55.154+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        comments
        (content, created_at, parent_id, post_id, report_count, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-15T18:26:12.316+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/23/comments
2025-07-15T18:26:12.333+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T18:26:12.338+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: test1234@gmail.com, password: $2a$10$Wu3a6oEE7TdG/3J304NyFeCNGzc1KpP98Hc9tLAUfFpzHWKxNICPW, authorities: [ROLE_USER]
2025-07-15T18:26:12.339+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/23/comments
2025-07-15T18:26:12.342+09:00  INFO 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 23, 사용자: test1234@gmail.com
2025-07-15T18:26:12.344+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T18:26:12.347+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T18:26:12.348+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T18:26:12.351+09:00 DEBUG 43487 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        comments
        (content, created_at, parent_id, post_id, report_count, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-15T18:38:12.981+09:00  INFO 43487 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T18:38:12.992+09:00  INFO 43487 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T18:38:13.002+09:00  INFO 43487 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:38:13.007+09:00  INFO 43487 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T18:38:13.017+09:00  INFO 43487 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T18:49:47.073+09:00  INFO 53026 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 53026 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T18:49:47.074+09:00 DEBUG 53026 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T18:49:47.075+09:00  INFO 53026 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T18:49:47.417+09:00  INFO 53026 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:49:47.449+09:00  INFO 53026 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 11 JPA repository interfaces.
2025-07-15T18:49:47.788+09:00  INFO 53026 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T18:49:47.796+09:00  INFO 53026 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T18:49:47.796+09:00  INFO 53026 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T18:49:47.823+09:00  INFO 53026 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T18:49:47.824+09:00  INFO 53026 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 730 ms
2025-07-15T18:49:47.907+09:00  INFO 53026 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:49:47.935+09:00  INFO 53026 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T18:49:47.952+09:00  INFO 53026 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:49:48.095+09:00  INFO 53026 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:49:48.108+09:00  INFO 53026 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T18:49:48.239+09:00  INFO 53026 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@204b0f07
2025-07-15T18:49:48.241+09:00  INFO 53026 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T18:49:48.289+09:00  WARN 53026 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:49:48.297+09:00  INFO 53026 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:49:48.809+09:00  INFO 53026 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T18:49:48.859+09:00 DEBUG 53026 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T18:49:48.886+09:00  WARN 53026 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T18:49:49.015+09:00  INFO 53026 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:49:49.203+09:00 DEBUG 53026 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T18:49:49.249+09:00  INFO 53026 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T18:49:49.858+09:00  INFO 53026 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T18:49:49.858+09:00  WARN 53026 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T18:49:50.140+09:00  WARN 53026 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:49:50.338+09:00 DEBUG 53026 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T18:49:50.476+09:00  INFO 53026 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T18:49:50.483+09:00  INFO 53026 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 3.628 seconds (process running for 3.78)
2025-07-15T18:49:50.523+09:00 DEBUG 53026 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T18:52:36.190+09:00  INFO 53026 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T18:52:36.212+09:00  INFO 53026 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T18:52:36.220+09:00  INFO 53026 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:52:36.224+09:00  INFO 53026 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T18:52:36.233+09:00  INFO 53026 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T18:52:39.303+09:00  INFO 53604 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 53604 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T18:52:39.304+09:00 DEBUG 53604 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T18:52:39.304+09:00  INFO 53604 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T18:52:39.688+09:00  INFO 53604 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:52:39.721+09:00  INFO 53604 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 11 JPA repository interfaces.
2025-07-15T18:52:40.035+09:00  INFO 53604 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T18:52:40.043+09:00  INFO 53604 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T18:52:40.043+09:00  INFO 53604 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T18:52:40.064+09:00  INFO 53604 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T18:52:40.064+09:00  INFO 53604 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 735 ms
2025-07-15T18:52:40.137+09:00  INFO 53604 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:52:40.162+09:00  INFO 53604 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T18:52:40.178+09:00  INFO 53604 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:52:40.319+09:00  INFO 53604 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:52:40.332+09:00  INFO 53604 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T18:52:40.429+09:00  INFO 53604 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@595ec862
2025-07-15T18:52:40.430+09:00  INFO 53604 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T18:52:40.464+09:00  WARN 53604 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:52:40.473+09:00  INFO 53604 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:52:40.994+09:00  INFO 53604 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T18:52:41.043+09:00 DEBUG 53604 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T18:52:41.065+09:00  WARN 53604 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T18:52:41.150+09:00  INFO 53604 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:52:41.324+09:00 DEBUG 53604 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T18:52:41.370+09:00  INFO 53604 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T18:52:42.087+09:00  INFO 53604 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T18:52:42.088+09:00  WARN 53604 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T18:52:42.446+09:00  WARN 53604 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:52:42.652+09:00 DEBUG 53604 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T18:52:42.791+09:00  INFO 53604 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T18:52:42.796+09:00  INFO 53604 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 3.727 seconds (process running for 3.935)
2025-07-15T18:52:42.821+09:00 DEBUG 53604 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T18:55:00.173+09:00  INFO 53604 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T18:55:00.207+09:00  INFO 53604 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T18:55:00.214+09:00  INFO 53604 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:55:00.223+09:00  INFO 53604 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T18:55:00.233+09:00  INFO 53604 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T18:55:55.429+09:00  INFO 54955 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 54955 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T18:55:55.430+09:00 DEBUG 54955 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T18:55:55.431+09:00  INFO 54955 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T18:55:55.804+09:00  INFO 54955 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:55:55.839+09:00  INFO 54955 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 11 JPA repository interfaces.
2025-07-15T18:55:56.174+09:00  INFO 54955 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T18:55:56.182+09:00  INFO 54955 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T18:55:56.182+09:00  INFO 54955 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T18:55:56.205+09:00  INFO 54955 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T18:55:56.205+09:00  INFO 54955 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 753 ms
2025-07-15T18:55:56.273+09:00  INFO 54955 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:55:56.300+09:00  INFO 54955 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T18:55:56.315+09:00  INFO 54955 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:55:56.454+09:00  INFO 54955 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:55:56.468+09:00  INFO 54955 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T18:55:56.600+09:00  INFO 54955 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25d0b918
2025-07-15T18:55:56.601+09:00  INFO 54955 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T18:55:56.653+09:00  WARN 54955 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:55:56.661+09:00  INFO 54955 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:55:57.179+09:00  INFO 54955 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T18:55:57.231+09:00 DEBUG 54955 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T18:55:57.258+09:00  WARN 54955 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T18:55:57.354+09:00  INFO 54955 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:55:57.531+09:00 DEBUG 54955 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T18:55:57.580+09:00  INFO 54955 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T18:55:58.212+09:00  INFO 54955 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T18:55:58.213+09:00  WARN 54955 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T18:55:58.510+09:00  WARN 54955 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:55:58.710+09:00 DEBUG 54955 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T18:55:58.907+09:00  INFO 54955 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T18:55:58.912+09:00  INFO 54955 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 3.691 seconds (process running for 3.828)
2025-07-15T18:55:58.941+09:00 DEBUG 54955 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T19:00:36.231+09:00  INFO 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15T19:00:36.231+09:00  INFO 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-15T19:00:36.236+09:00  INFO 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2025-07-15T19:00:36.249+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/health
2025-07-15T19:00:36.255+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:00:36.256+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/health
2025-07-15T19:00:36.273+09:00 ERROR 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/health.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:00:39.276+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:00:39.276+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:00:39.276+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:00:39.346+09:00  INFO 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:00:39.464+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:00:39.606+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:00:39.607+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:00:39.609+09:00 ERROR 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:04:32.049+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/health
2025-07-15T19:04:32.059+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:04:32.059+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/health
2025-07-15T19:04:32.115+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/health
2025-07-15T19:04:32.115+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:04:32.115+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/health
2025-07-15T19:04:32.127+09:00 ERROR 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/health.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:04:36.173+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/health
2025-07-15T19:04:36.181+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:04:36.182+09:00 DEBUG 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/health
2025-07-15T19:04:36.191+09:00 ERROR 54955 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/health.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:04:50.118+09:00  INFO 54955 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T19:04:50.133+09:00  INFO 54955 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T19:04:50.141+09:00  INFO 54955 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T19:04:50.146+09:00  INFO 54955 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T19:04:50.155+09:00  INFO 54955 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T19:06:54.518+09:00  INFO 59791 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 59791 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T19:06:54.520+09:00 DEBUG 59791 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T19:06:54.520+09:00  INFO 59791 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T19:06:54.930+09:00  INFO 59791 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T19:06:54.969+09:00  INFO 59791 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 11 JPA repository interfaces.
2025-07-15T19:06:55.331+09:00  INFO 59791 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T19:06:55.341+09:00  INFO 59791 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T19:06:55.342+09:00  INFO 59791 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T19:06:55.365+09:00  INFO 59791 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T19:06:55.366+09:00  INFO 59791 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 800 ms
2025-07-15T19:06:55.441+09:00  INFO 59791 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T19:06:55.470+09:00  INFO 59791 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T19:06:55.486+09:00  INFO 59791 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T19:06:55.641+09:00  INFO 59791 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T19:06:55.662+09:00  INFO 59791 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T19:06:55.829+09:00  INFO 59791 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@77cd235b
2025-07-15T19:06:55.830+09:00  INFO 59791 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T19:06:55.877+09:00  WARN 59791 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T19:06:55.887+09:00  INFO 59791 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T19:06:56.462+09:00  INFO 59791 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T19:06:56.532+09:00 DEBUG 59791 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T19:06:56.562+09:00  WARN 59791 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T19:06:57.169+09:00  INFO 59791 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T19:06:57.421+09:00 DEBUG 59791 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T19:06:57.477+09:00  INFO 59791 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T19:06:58.135+09:00  INFO 59791 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T19:06:58.136+09:00  WARN 59791 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T19:06:58.539+09:00  WARN 59791 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T19:06:58.772+09:00 DEBUG 59791 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T19:06:58.931+09:00  INFO 59791 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T19:06:58.936+09:00  INFO 59791 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 4.653 seconds (process running for 4.819)
2025-07-15T19:06:58.978+09:00 DEBUG 59791 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T19:07:19.917+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15T19:07:19.918+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-15T19:07:19.928+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-07-15T19:07:19.947+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/health
2025-07-15T19:07:19.954+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:07:19.955+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/health
2025-07-15T19:07:19.992+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/health.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:08:20.560+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/login
2025-07-15T19:08:20.562+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:08:20.562+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/login
2025-07-15T19:08:20.563+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:509) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:09:00.394+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T19:09:00.396+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:09:00.396+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T19:09:00.415+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/login
2025-07-15T19:09:00.415+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:09:00.415+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/login
2025-07-15T19:09:00.418+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.config.GlobalExceptionHandler      : Exception 발생: 

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:509) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:09:52.474+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:09:52.476+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:09:52.477+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:09:52.561+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: password123
2025-07-15T19:09:52.680+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:09:52.739+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:09:52.834+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-07-15T19:09:52.834+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:09:52.836+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:150) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:10:27.407+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:10:27.411+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:10:27.411+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:10:27.423+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:10:27.428+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:10:27.539+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:10:27.540+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:10:27.540+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:11:05.075+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T19:11:05.080+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.085+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T19:11:05.100+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:11:05.101+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.101+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:11:05.115+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:11:05.126+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:05.282+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:11:05.282+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:11:05.284+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:11:05.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:11:05.297+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.297+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:11:05.299+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: test0119!
2025-07-15T19:11:05.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:05.332+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:05.437+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T19:11:05.522+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:05.960+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me
2025-07-15T19:11:05.960+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags/popular?limit=10
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags
2025-07-15T19:11:05.960+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?page=0&size=10
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags/popular?limit=10
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?page=0&size=10
2025-07-15T19:11:05.961+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags
2025-07-15T19:11:05.966+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T19:11:05.966+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T19:11:05.965+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T19:11:05.966+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T19:11:06.021+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:06.021+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:06.022+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:06.022+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:06.026+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:06.028+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T19:11:06.036+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T19:11:06.038+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:06.038+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:06.038+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:06.039+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T19:11:06.039+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T19:11:06.040+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T19:11:06.041+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T19:11:06.041+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T19:11:06.042+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T19:11:06.047+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T19:11:06.047+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T19:11:06.049+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:06.058+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T19:11:06.068+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T19:11:06.083+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T19:11:06.090+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:11:06.142+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T19:11:06.159+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.159+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:11:06.159+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.170+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:11:06.170+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:11:06.174+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.176+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:11:06.187+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.190+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T19:11:06.192+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.192+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.195+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.196+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T19:11:06.196+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.197+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.199+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.200+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.202+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.202+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.205+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T19:11:06.206+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T19:11:06.206+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.207+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.213+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.213+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.214+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:11:06.217+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.220+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.222+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.225+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.227+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T19:11:06.228+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.233+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.233+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.235+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.235+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.236+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.237+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.240+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.240+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.245+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.245+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.246+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.246+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:11:06.247+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.247+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:11:06.259+09:00  WARN 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-15T19:11:09.719+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:09.725+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:09.726+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:09.742+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:09.774+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:09.793+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:09.795+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:09.800+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:11:09.808+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:11:09.826+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:11:09.836+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:11:09.838+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:11:09.841+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:11:09.843+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:11:15.238+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/22/comments?page=0&size=10
2025-07-15T19:11:15.239+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:11:15.239+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/22/comments?page=0&size=10
2025-07-15T19:11:15.243+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/22/comments?page=0&size=10
2025-07-15T19:11:15.245+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:15.248+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:15.250+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/22/comments?page=0&size=10
2025-07-15T19:11:15.252+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 22, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:11:15.254+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:11:15.261+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:11:21.528+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:21.532+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:11:21.536+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:11:21.539+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T19:11:21.540+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:11:21.543+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:11:21.556+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:11:21.561+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:11:21.563+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:11:21.571+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:11:21.594+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:12:40.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?userId=7
2025-07-15T19:12:40.607+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:12:40.608+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?userId=7
2025-07-15T19:12:40.621+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/posts?userId=7
2025-07-15T19:12:40.650+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:40.746+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:40.747+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/posts?userId=7
2025-07-15T19:12:40.765+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.PostController     : 게시글 작성 요청: userId=7, title=민간
2025-07-15T19:12:40.780+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:12:40.792+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    where
        t1_0.name in (?)
2025-07-15T19:12:40.824+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        tags
        (name, tag_type) 
    values
        (?, ?)
2025-07-15T19:12:40.848+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.bootcampbox.server.service.TagService  : 새 태그 생성: 민간인스
2025-07-15T19:12:40.849+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (anonymous_nickname, author_user_type, comment_count, content, created_at, is_anonymous, like_count, report_count, title, updated_at, user_id, view_count) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-15T19:12:40.866+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        post_tags
        (post_id, tag_id) 
    values
        (?, ?)
2025-07-15T19:12:42.053+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T19:12:42.053+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T19:12:42.053+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T19:12:42.053+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T19:12:42.057+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:42.057+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:42.057+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:42.058+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:42.061+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:42.061+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:42.062+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:42.065+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T19:12:42.065+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T19:12:42.066+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T19:12:42.067+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T19:12:42.067+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T19:12:42.067+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T19:12:42.067+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T19:12:42.071+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T19:12:42.072+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T19:12:42.073+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:42.075+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T19:12:42.077+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T19:12:42.078+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:42.079+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T19:12:42.083+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.083+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:12:42.083+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T19:12:42.085+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:12:42.086+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:12:42.088+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:12:42.091+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T19:12:42.092+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.105+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:12:42.106+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.107+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.110+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T19:12:42.110+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.110+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.114+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.115+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.115+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T19:12:42.114+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.119+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.120+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.120+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.122+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T19:12:42.122+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.123+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.123+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.126+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T19:12:42.127+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.127+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.128+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.129+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:12:42.129+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.129+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.136+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.137+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.138+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.138+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T19:12:42.139+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.139+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.139+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.141+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.142+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.142+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.142+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.144+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.144+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.145+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:12:42.145+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.147+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.151+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:42.153+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:12:44.950+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:12:44.951+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:12:44.951+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:12:44.954+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:12:44.956+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:12:44.967+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:12:44.974+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:12:44.977+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:12:44.979+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:12:44.983+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:13:45.954+09:00  INFO 64567 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 64567 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T19:13:45.956+09:00 DEBUG 64567 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T19:13:45.956+09:00  INFO 64567 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T19:13:46.338+09:00  INFO 64567 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T19:13:46.372+09:00  INFO 64567 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 11 JPA repository interfaces.
2025-07-15T19:13:46.714+09:00  INFO 64567 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T19:13:46.722+09:00  INFO 64567 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T19:13:46.722+09:00  INFO 64567 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T19:13:46.745+09:00  INFO 64567 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T19:13:46.745+09:00  INFO 64567 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 767 ms
2025-07-15T19:13:46.819+09:00  INFO 64567 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T19:13:46.858+09:00  INFO 64567 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T19:13:46.874+09:00  INFO 64567 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T19:13:47.030+09:00  INFO 64567 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T19:13:47.046+09:00  INFO 64567 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T19:13:47.136+09:00  INFO 64567 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@248d3a
2025-07-15T19:13:47.137+09:00  INFO 64567 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T19:13:47.171+09:00  WARN 64567 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T19:13:47.179+09:00  INFO 64567 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T19:13:47.721+09:00  INFO 64567 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T19:13:47.782+09:00 DEBUG 64567 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T19:13:47.807+09:00  WARN 64567 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T19:13:47.924+09:00  INFO 64567 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T19:13:48.116+09:00 DEBUG 64567 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T19:13:48.170+09:00  INFO 64567 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T19:13:48.785+09:00  INFO 64567 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T19:13:48.785+09:00  WARN 64567 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T19:13:49.076+09:00  WARN 64567 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T19:13:49.280+09:00 DEBUG 64567 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T19:13:49.463+09:00  WARN 64567 --- [rookie_px_server] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-15T19:13:49.465+09:00  INFO 64567 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T19:13:49.468+09:00  INFO 64567 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T19:13:49.471+09:00  INFO 64567 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T19:13:49.478+09:00  INFO 64567 --- [rookie_px_server] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-15T19:13:49.486+09:00 ERROR 64567 --- [rookie_px_server] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-15T19:13:57.738+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:13:57.741+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:13:57.742+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:13:57.752+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:13:57.757+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:13:57.871+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:13:57.872+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:13:57.873+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:20:24.638+09:00  WARN 59791 --- [rookie_px_server] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s567ms).
2025-07-15T19:33:37.030+09:00  WARN 59791 --- [rookie_px_server] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m42s377ms).
2025-07-15T19:34:01.938+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T19:34:01.987+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:01.988+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T19:34:02.006+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:34:02.006+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.006+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:34:02.014+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:34:02.040+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.241+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:34:02.241+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:34:02.244+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:34:02.257+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:34:02.257+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.257+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:34:02.259+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: test0119!
2025-07-15T19:34:02.261+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.297+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:02.413+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T19:34:02.429+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.892+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags/popular?limit=10
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags/popular?limit=10
2025-07-15T19:34:02.892+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?page=0&size=10
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?page=0&size=10
2025-07-15T19:34:02.893+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:02.894+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags
2025-07-15T19:34:02.897+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T19:34:02.897+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T19:34:02.898+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T19:34:02.898+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T19:34:02.902+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.902+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.914+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.916+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:02.918+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:02.918+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:02.919+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T19:34:02.919+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T19:34:02.922+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T19:34:02.925+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:02.926+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T19:34:02.929+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T19:34:02.930+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T19:34:02.934+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:02.936+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T19:34:02.942+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T19:34:03.015+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T19:34:03.015+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T19:34:03.018+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:03.035+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T19:34:03.036+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T19:34:03.050+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T19:34:03.051+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:34:03.058+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.066+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:34:03.066+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.067+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:34:03.067+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.067+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:34:03.068+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.069+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.070+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.072+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T19:34:03.072+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.073+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.074+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.075+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.077+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.078+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.079+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.080+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.082+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.083+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.085+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.094+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.095+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.096+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T19:34:03.100+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.100+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.102+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.103+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.103+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.105+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.105+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.107+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.107+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.112+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.113+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:34:03.115+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.117+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.117+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.119+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.120+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.121+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.122+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:34:03.123+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:34:03.137+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T19:34:03.155+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T19:34:03.160+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T19:34:03.171+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:34:03.176+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T19:34:05.639+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:34:05.639+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:05.639+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:34:05.648+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:34:05.654+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:05.657+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:05.658+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:34:05.659+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:34:05.660+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:34:05.666+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:34:15.293+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments
2025-07-15T19:34:15.295+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:34:15.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments
2025-07-15T19:34:15.305+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/comments
2025-07-15T19:34:15.312+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:34:15.321+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:34:15.322+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/comments
2025-07-15T19:34:15.338+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T19:34:15.341+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:34:15.345+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:34:15.349+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        comments
        (content, created_at, parent_id, post_id, report_count, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-15T19:36:52.958+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T19:36:52.958+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T19:36:52.958+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T19:36:52.958+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T19:36:52.977+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:52.977+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:52.977+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:52.978+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:52.984+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:36:52.984+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:36:52.984+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:36:52.984+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:36:52.986+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T19:36:52.986+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T19:36:52.986+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T19:36:52.986+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T19:36:52.988+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T19:36:52.988+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T19:36:52.989+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T19:36:52.989+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T19:36:52.990+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T19:36:52.990+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T19:36:52.991+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T19:36:52.991+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:52.991+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T19:36:52.992+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T19:36:52.995+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:36:52.999+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:36:52.999+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.000+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T19:36:53.001+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:36:53.002+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:36:53.003+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:36:53.006+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T19:36:53.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.011+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.011+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.013+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.013+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.013+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.015+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:36:53.015+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.018+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.020+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.021+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.022+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.023+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.024+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.025+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.025+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.053+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.054+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T19:36:53.208+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T19:36:53.211+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.214+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T19:36:53.216+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:36:53.215+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.218+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.219+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T19:36:53.223+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.226+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.228+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.230+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.233+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:53.234+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:36:59.883+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:36:59.903+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:36:59.907+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:36:59.909+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:36:59.911+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:36:59.914+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:36:59.923+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:36:59.925+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T19:55:50.898+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T19:55:50.900+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:50.901+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T19:55:50.908+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:55:50.909+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:50.909+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:55:50.916+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T19:55:50.922+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.096+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T19:55:51.096+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T19:55:51.097+09:00 ERROR 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T19:55:51.113+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T19:55:51.113+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:51.114+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T19:55:51.115+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: test0119!
2025-07-15T19:55:51.117+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.123+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:51.238+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T19:55:51.240+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?page=0&size=10
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?page=0&size=10
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags
2025-07-15T19:55:51.558+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me
2025-07-15T19:55:51.559+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:51.559+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me
2025-07-15T19:55:51.560+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags/popular?limit=10
2025-07-15T19:55:51.560+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:51.560+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags/popular?limit=10
2025-07-15T19:55:51.561+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T19:55:51.563+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T19:55:51.564+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T19:55:51.565+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.565+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.567+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.567+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T19:55:51.568+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:51.569+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.569+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T19:55:51.570+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T19:55:51.570+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:51.571+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T19:55:51.572+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T19:55:51.578+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:51.578+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:51.579+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T19:55:51.579+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T19:55:51.580+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T19:55:51.581+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T19:55:51.582+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T19:55:51.582+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T19:55:51.583+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T19:55:51.583+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:51.583+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T19:55:51.584+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T19:55:51.585+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:55:51.586+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.587+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:55:51.591+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:55:51.596+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T19:55:51.597+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T19:55:51.597+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.599+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.599+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T19:55:51.599+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.600+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T19:55:51.600+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.601+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.601+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.602+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.602+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.602+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.603+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.603+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.603+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.604+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.604+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T19:55:51.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.605+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.607+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.607+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.607+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.607+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.608+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.608+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.609+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T19:55:51.609+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.609+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T19:55:51.610+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.611+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.611+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.613+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T19:55:51.613+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.615+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T19:55:51.617+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T19:55:54.870+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:55:54.870+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T19:55:54.870+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T19:55:54.874+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:55:54.876+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T19:55:54.878+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T19:55:54.880+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T19:55:54.881+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T19:55:54.884+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T19:55:54.889+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T19:55:54.890+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:05:23.029+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:05:23.029+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:05:23.029+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:05:23.029+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:05:23.052+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:23.052+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:23.052+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:23.052+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:23.227+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:05:23.228+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:05:23.228+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:05:23.228+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:05:23.229+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:05:23.229+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:05:23.229+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:05:23.229+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:05:23.233+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:05:23.233+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:05:23.234+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:05:23.235+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:05:23.244+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:05:23.244+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:05:23.245+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:05:23.246+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:23.246+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:05:23.246+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:05:23.283+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:05:23.284+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.284+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.287+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:05:23.290+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:05:23.291+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.291+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:05:23.291+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:05:23.292+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.293+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:05:23.293+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.293+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:05:23.293+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.294+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.294+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.294+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.294+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.295+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.295+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.295+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.296+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.297+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.298+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.299+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.299+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.299+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.300+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:05:23.301+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.302+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.302+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:05:23.302+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.303+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.303+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.304+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.304+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:05:23.304+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.305+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:05:23.306+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.309+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:05:23.310+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:23.311+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:05:23.311+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:05:25.549+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T20:05:25.550+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:05:25.551+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T20:05:25.559+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T20:05:25.577+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:05:25.580+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:05:25.581+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T20:05:25.585+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:05:25.587+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:05:25.591+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:05:25.594+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:05:25.595+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:05:25.596+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:05:25.598+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:06:29.971+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:06:29.971+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:06:29.971+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:06:29.971+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:06:29.988+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:29.988+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:29.988+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:29.988+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:29.998+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:06:29.998+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:06:29.998+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:06:29.998+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:06:29.999+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:06:29.999+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:06:29.999+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:06:30.000+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:06:30.001+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:06:30.001+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:06:30.001+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:06:30.001+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:06:30.002+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:06:30.002+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:06:30.004+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:06:30.004+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:30.004+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:06:30.006+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:06:30.007+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.007+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:06:30.008+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.008+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:06:30.008+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.009+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:06:30.009+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:06:30.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:06:30.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:06:30.010+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.011+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.011+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:06:30.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:06:30.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.012+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.013+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:06:30.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.014+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.015+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:06:30.015+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:06:30.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.016+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.017+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.017+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.017+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.017+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:06:30.017+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.018+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.018+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.019+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.019+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.019+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.020+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.020+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:06:30.020+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.022+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.025+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.027+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:30.027+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:06:32.696+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:06:32.716+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:06:32.724+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:06:32.727+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:06:32.733+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:06:32.734+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:06:32.737+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:06:32.738+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:12:33.837+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:12:33.837+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:12:33.837+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:12:33.837+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:12:33.861+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:33.861+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:33.861+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:33.861+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:33.886+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:12:33.886+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:12:33.886+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:12:33.886+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:12:33.887+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:12:33.887+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:12:33.887+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:12:33.887+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:12:33.892+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:12:33.893+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:12:33.893+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:12:33.894+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:12:33.894+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:12:33.894+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:12:33.895+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:33.895+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:12:33.896+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:12:33.896+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:12:33.901+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:12:33.906+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:12:33.906+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.908+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:12:33.908+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:12:33.910+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:12:33.912+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.913+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.914+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.915+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:12:33.916+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.917+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.923+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.923+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:12:33.924+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.924+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.924+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.925+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.925+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.926+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.926+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.927+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.927+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.927+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:12:33.928+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.929+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.929+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.930+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.930+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.931+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.932+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.932+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.933+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.934+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.946+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.950+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.951+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:12:33.952+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.954+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.960+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.963+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.972+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.973+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:12:33.982+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.989+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:12:33.990+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.996+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:12:33.997+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:12:34.003+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:12:36.593+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:12:36.595+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:12:36.596+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:12:36.596+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:12:36.598+09:00  INFO 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:12:36.599+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:12:36.606+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:12:36.608+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:12:45.199+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/comments/8
2025-07-15T20:12:45.200+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:12:45.200+09:00 DEBUG 59791 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/comments/8
2025-07-15T20:15:31.102+09:00  INFO 59791 --- [rookie_px_server] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-15T20:15:31.118+09:00  INFO 59791 --- [rookie_px_server] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-15T20:15:31.131+09:00  INFO 59791 --- [rookie_px_server] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T20:15:31.142+09:00  INFO 59791 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-15T20:15:31.144+09:00  INFO 59791 --- [rookie_px_server] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-15T20:15:34.097+09:00  INFO 75367 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Starting RookiePxServerApplication using Java 17.0.12 with PID 75367 (/Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server/build/classes/java/main started by jinbyeongsu in /Users/jinbyeongsu/Desktop/BootCampBox/rookie_px_server)
2025-07-15T20:15:34.098+09:00 DEBUG 75367 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Running with Spring Boot v3.5.3, Spring v6.2.8
2025-07-15T20:15:34.098+09:00  INFO 75367 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : The following 1 profile is active: "local"
2025-07-15T20:15:34.458+09:00  INFO 75367 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T20:15:34.494+09:00  INFO 75367 --- [rookie_px_server] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32 ms. Found 11 JPA repository interfaces.
2025-07-15T20:15:34.899+09:00  INFO 75367 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-15T20:15:34.908+09:00  INFO 75367 --- [rookie_px_server] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-15T20:15:34.908+09:00  INFO 75367 --- [rookie_px_server] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-15T20:15:34.931+09:00  INFO 75367 --- [rookie_px_server] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-15T20:15:34.931+09:00  INFO 75367 --- [rookie_px_server] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 811 ms
2025-07-15T20:15:34.998+09:00  INFO 75367 --- [rookie_px_server] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T20:15:35.024+09:00  INFO 75367 --- [rookie_px_server] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-15T20:15:35.038+09:00  INFO 75367 --- [rookie_px_server] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T20:15:35.166+09:00  INFO 75367 --- [rookie_px_server] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T20:15:35.180+09:00  INFO 75367 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-15T20:15:35.255+09:00  INFO 75367 --- [rookie_px_server] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56cd5d76
2025-07-15T20:15:35.256+09:00  INFO 75367 --- [rookie_px_server] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-15T20:15:35.304+09:00  WARN 75367 --- [rookie_px_server] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T20:15:35.312+09:00  INFO 75367 --- [rookie_px_server] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T20:15:35.813+09:00  INFO 75367 --- [rookie_px_server] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-15T20:15:35.866+09:00 DEBUG 75367 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    alter table comment_reports 
       add column id bigint not null auto_increment
2025-07-15T20:15:35.893+09:00  WARN 75367 --- [rookie_px_server] [main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table comment_reports 
       add column id bigint not null auto_increment" via JDBC [Incorrect table definition; there can be only one auto column and it must be defined as a key]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621) ~[spring-context-6.2.8.jar:6.2.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) ~[spring-boot-3.5.3.jar:3.5.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) ~[spring-boot-3.5.3.jar:3.5.3]
	at com.bootcampbox.server.RookiePxServerApplication.main(RookiePxServerApplication.java:13) ~[main/:na]
Caused by: java.sql.SQLSyntaxErrorException: Incorrect table definition; there can be only one auto column and it must be defined as a key
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685) ~[mysql-connector-j-9.2.0.jar:9.2.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.18.Final.jar:6.6.18.Final]
	... 122 common frames omitted

2025-07-15T20:15:35.971+09:00  INFO 75367 --- [rookie_px_server] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T20:15:36.161+09:00 DEBUG 75367 --- [rookie_px_server] [main] c.b.s.config.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-07-15T20:15:36.210+09:00  INFO 75367 --- [rookie_px_server] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-15T20:15:36.794+09:00  INFO 75367 --- [rookie_px_server] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-15T20:15:36.795+09:00  WARN 75367 --- [rookie_px_server] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-07-15T20:15:37.067+09:00  WARN 75367 --- [rookie_px_server] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T20:15:37.268+09:00 DEBUG 75367 --- [rookie_px_server] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-07-15T20:15:37.420+09:00  INFO 75367 --- [rookie_px_server] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-15T20:15:37.425+09:00  INFO 75367 --- [rookie_px_server] [main] c.b.server.RookiePxServerApplication     : Started RookiePxServerApplication in 3.532 seconds (process running for 3.674)
2025-07-15T20:15:37.454+09:00 DEBUG 75367 --- [rookie_px_server] [main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        categories c1_0
2025-07-15T20:15:41.700+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15T20:15:41.700+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-15T20:15:41.707+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-07-15T20:15:41.720+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/comments/8
2025-07-15T20:15:41.725+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:15:41.726+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/comments/8
2025-07-15T20:15:41.747+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing PATCH /api/posts/comments/8
2025-07-15T20:15:41.968+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:15:41.981+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:15:41.983+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured PATCH /api/posts/comments/8
2025-07-15T20:15:42.046+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.CommentController  : 댓글 수정 요청 - 댓글: 8, 사용자: domo@gmail.com
2025-07-15T20:15:42.051+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:15:42.060+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:15:42.076+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    update
        comments 
    set
        content=?,
        created_at=?,
        parent_id=?,
        post_id=?,
        report_count=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-07-15T20:15:50.062+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments
2025-07-15T20:15:50.064+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:15:50.064+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments
2025-07-15T20:15:50.075+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/comments
2025-07-15T20:15:50.112+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:15:50.130+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:15:50.135+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/comments
2025-07-15T20:15:50.234+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:15:50.258+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:15:50.318+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:15:50.320+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:15:50.331+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        comments
        (content, created_at, parent_id, post_id, report_count, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-15T20:18:19.637+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:18:19.652+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:18:19.728+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:18:19.732+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:18:19.738+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:18:19.757+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:18:19.769+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:18:19.774+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:18:22.092+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/comments/9
2025-07-15T20:18:22.093+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:18:22.093+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/comments/9
2025-07-15T20:18:22.099+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing DELETE /api/posts/comments/9
2025-07-15T20:18:22.103+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:18:22.105+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:18:22.107+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured DELETE /api/posts/comments/9
2025-07-15T20:18:22.108+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.CommentController  : 댓글 삭제 요청 - 댓글: 9, 사용자: domo@gmail.com
2025-07-15T20:18:22.109+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:18:22.111+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:18:22.113+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:18:22.119+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    delete 
    from
        comment_likes 
    where
        comment_id=?
2025-07-15T20:18:22.149+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    delete 
    from
        comment_reports 
    where
        comment_id=?
2025-07-15T20:18:22.154+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    delete 
    from
        comments 
    where
        id=?
2025-07-15T20:18:27.563+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:18:27.573+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:18:27.601+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:18:27.609+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:18:27.619+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:18:27.622+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:18:27.634+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:18:27.639+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:21:17.067+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:21:17.067+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:21:17.066+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:21:17.067+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:21:17.084+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:17.084+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:17.084+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:17.084+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:17.131+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:17.131+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:17.131+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:17.131+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:17.133+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:21:17.133+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:21:17.134+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:21:17.134+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:21:17.135+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:21:17.136+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:21:17.136+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:21:17.136+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:21:17.137+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:21:17.138+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:17.142+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:21:17.146+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:21:17.150+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:21:17.151+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:21:17.153+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:21:17.159+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:21:17.160+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.162+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:21:17.163+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:21:17.163+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:21:17.166+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.170+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.172+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:21:17.173+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.175+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.178+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.178+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:21:17.178+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.181+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.180+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.182+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.182+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.183+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:21:17.183+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.184+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.185+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.185+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.186+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.187+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:21:17.187+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.188+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.188+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.189+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.189+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.192+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:21:17.194+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.195+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.195+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:21:17.195+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.196+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.196+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.196+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.198+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.199+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.199+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.200+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.200+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.200+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.200+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:21:17.202+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.202+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:21:17.204+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.205+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:21:17.217+09:00  WARN 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-15T20:21:19.723+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:21:19.744+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:19.755+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:19.756+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:21:19.763+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:21:19.764+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:21:19.768+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:21:19.770+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:21:25.803+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing DELETE /api/posts/comments/8
2025-07-15T20:21:25.846+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:21:25.865+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:21:25.872+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured DELETE /api/posts/comments/8
2025-07-15T20:21:25.874+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.CommentController  : 댓글 삭제 요청 - 댓글: 8, 사용자: domo@gmail.com
2025-07-15T20:21:25.876+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:21:25.878+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:21:25.880+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:21:25.882+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    delete 
    from
        comment_likes 
    where
        comment_id=?
2025-07-15T20:21:25.890+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    delete 
    from
        comment_reports 
    where
        comment_id=?
2025-07-15T20:21:25.892+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    delete 
    from
        comments 
    where
        id=?
2025-07-15T20:22:05.003+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/comments
2025-07-15T20:22:05.020+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:22:05.027+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:22:05.028+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/comments
2025-07-15T20:22:05.031+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.CommentController  : 댓글 작성 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:22:05.032+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:22:05.035+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:22:05.038+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        comments
        (content, created_at, parent_id, post_id, report_count, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-15T20:24:06.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:24:06.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:24:06.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:24:06.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:24:06.397+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:06.397+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:06.397+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:06.397+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:06.402+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:06.402+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:06.402+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:06.402+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:06.408+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:24:06.408+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:24:06.409+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:24:06.409+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:24:06.411+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:24:06.412+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:24:06.412+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:24:06.420+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:24:06.421+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:24:06.423+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:24:06.425+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:24:06.428+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:06.429+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:24:06.430+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:24:06.438+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:24:06.439+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.438+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:24:06.442+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:24:06.442+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.444+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.444+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:24:06.444+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:24:06.445+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.451+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.452+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:24:06.454+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.454+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.454+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:24:06.455+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.455+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.456+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.456+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.456+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.459+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.459+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.460+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.461+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:24:06.464+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.466+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.470+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.471+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.471+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.471+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:24:06.475+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.477+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.480+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.481+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.483+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.484+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:24:06.486+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.486+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.489+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:24:06.490+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:24:06.490+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.491+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.494+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.494+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:24:06.497+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.499+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.502+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.507+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.514+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:06.738+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:24:09.278+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:24:09.289+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:09.293+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:09.294+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:24:09.295+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:24:09.297+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:24:09.309+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:09.311+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:24:32.502+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/like
2025-07-15T20:24:32.506+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:24:32.506+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/like
2025-07-15T20:24:32.515+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:24:32.530+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:32.534+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:32.536+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:24:32.539+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:24:32.541+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:24:32.544+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:32.549+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:32.552+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        post_likes
        (created_at, post_id, user_id) 
    values
        (?, ?, ?)
2025-07-15T20:24:32.554+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.service.PostActionService     : 게시글 좋아요 완료 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:24:32.556+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    update
        posts 
    set
        anonymous_nickname=?,
        author_user_type=?,
        comment_count=?,
        content=?,
        created_at=?,
        is_anonymous=?,
        like_count=?,
        report_count=?,
        title=?,
        updated_at=?,
        user_id=?,
        view_count=? 
    where
        id=?
2025-07-15T20:24:32.560+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pr1_0.id,
        pr1_0.additional_reason,
        pr1_0.admin_comment,
        pr1_0.created_at,
        pr1_0.post_id,
        pr1_0.processed_at,
        pr1_0.processed_by,
        pr1_0.report_type,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.user_id 
    from
        post_reports pr1_0 
    left join
        posts p1_0 
            on p1_0.id=pr1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pr1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:32.563+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    left join
        posts p1_0 
            on p1_0.id=b1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:34.621+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:24:34.646+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:34.652+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:34.654+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:24:34.664+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:24:34.667+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:24:34.670+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:34.673+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:24:35.226+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:24:35.227+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:35.229+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:35.229+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:24:35.230+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:24:35.231+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:24:35.233+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:35.235+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:35.239+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:24:36.914+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:24:36.916+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:36.918+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:36.919+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:24:36.919+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:24:36.920+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:24:36.922+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:36.923+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:36.928+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:24:37.408+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:24:37.410+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:24:37.412+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:24:37.413+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:24:37.414+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:24:37.415+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:24:37.418+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:24:37.420+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:24:37.421+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:34:51.996+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/auth/login
2025-07-15T20:34:51.999+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:51.999+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/auth/login
2025-07-15T20:34:52.018+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T20:34:52.019+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.019+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T20:34:52.048+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: test@test.com, password: test
2025-07-15T20:34:52.157+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.300+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to find user 'test@test.com'
2025-07-15T20:34:52.300+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.authentication.ProviderManager     : Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-07-15T20:34:52.305+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.config.GlobalExceptionHandler      : BadCredentialsException 발생: 

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-6.5.1.jar:6.5.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.service.AuthService.login(AuthService.java:27) ~[main/:na]
	at com.bootcampbox.server.controller.AuthController.login(AuthController.java:34) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:34:52.321+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/login
2025-07-15T20:34:52.321+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.321+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/login
2025-07-15T20:34:52.322+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.AuthController     : [my-log] 로그인 요청 - email: domo@gmail.com, password: test0119!
2025-07-15T20:34:52.322+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.328+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:52.429+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-07-15T20:34:52.442+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags
2025-07-15T20:34:52.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags
2025-07-15T20:34:52.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/user/me
2025-07-15T20:34:52.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/tags/popular?limit=10
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/user/me
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?page=0&size=10
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/tags/popular?limit=10
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:52.869+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts?page=0&size=10
2025-07-15T20:34:52.870+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:34:52.871+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:34:52.871+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:34:52.871+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:34:52.872+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.872+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.873+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.874+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.875+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:52.875+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:52.875+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:52.875+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:34:52.876+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:52.876+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:34:52.876+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:34:52.876+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:34:52.876+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:34:52.876+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:34:52.877+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:34:52.878+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:34:52.880+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:34:52.880+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:34:52.881+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:34:52.882+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:34:52.882+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:52.882+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:34:52.885+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:34:52.887+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:34:52.887+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.889+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:34:52.889+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.890+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:34:52.890+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:34:52.890+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.894+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:34:52.894+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.895+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.897+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:34:52.897+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.899+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.899+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.900+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:34:52.901+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.901+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.902+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.902+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:34:52.902+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.902+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.904+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.904+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.904+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.905+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:34:52.905+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.906+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.907+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.907+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.907+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:34:52.908+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.908+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.908+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.909+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.909+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.909+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.909+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.909+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.910+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.910+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:34:52.910+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.911+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.911+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.912+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.914+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.918+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:52.919+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:34:52.920+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:34:56.453+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T20:34:56.453+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:56.453+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/comments?page=0&size=10
2025-07-15T20:34:56.457+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:34:56.458+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:56.460+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:56.460+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:34:56.462+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:34:56.463+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:34:56.465+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:34:56.466+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:34:58.609+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24/like
2025-07-15T20:34:58.609+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:34:58.609+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24/like
2025-07-15T20:34:58.615+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:34:58.617+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:34:58.618+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:34:58.620+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:34:58.624+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:34:58.625+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:34:58.630+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:34:58.633+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:34:58.635+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:40:41.753+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:40:41.753+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:40:41.753+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:40:41.754+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:40:41.771+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:41.771+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:41.771+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:41.771+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:41.813+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:41.813+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:41.813+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:41.814+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:41.816+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:40:41.816+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:40:41.816+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:40:41.816+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:40:41.821+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:40:41.821+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:40:41.822+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:40:41.822+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:40:41.822+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:40:41.823+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:40:41.824+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:41.824+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:40:41.825+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:40:41.832+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:40:41.831+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:40:41.839+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:40:41.842+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.844+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.844+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:40:41.845+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:40:41.849+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:40:41.849+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:40:41.852+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.856+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.856+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.858+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:40:41.859+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:40:41.859+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.859+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.859+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.860+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.860+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:40:41.861+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.861+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:40:41.861+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.861+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.862+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:40:41.862+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.862+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.863+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.863+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.863+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.864+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.864+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:40:41.864+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.864+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.865+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.865+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.866+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.866+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.866+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.867+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.868+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:40:41.871+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.873+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.875+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.877+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.878+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:41.879+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:40:45.054+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:40:45.074+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:45.079+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:45.082+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:40:45.084+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:40:45.087+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:40:45.092+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:45.093+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:40:46.135+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:40:46.138+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:46.141+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:46.143+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:40:46.145+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:40:46.150+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:40:46.156+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:46.160+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:40:46.164+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:40:49.948+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:40:49.956+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:49.959+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:49.961+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:40:49.963+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:40:49.964+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:40:49.967+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:49.970+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:40:49.971+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:40:51.049+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/comments/10/like
2025-07-15T20:40:51.049+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:40:51.049+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/comments/10/like
2025-07-15T20:40:51.054+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:40:51.057+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:51.060+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:51.061+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:40:51.062+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:40:51.063+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:40:51.067+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:51.069+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:40:51.096+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        comment_likes
        (comment_id, user_id) 
    values
        (?, ?)
2025-07-15T20:40:52.136+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing DELETE /api/posts/comments/10/like
2025-07-15T20:40:52.138+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:52.140+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:52.141+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured DELETE /api/posts/comments/10/like
2025-07-15T20:40:52.141+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.c.CommentActionController          : 댓글 좋아요 취소 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:40:52.142+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:40:52.145+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:52.147+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:40:52.150+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    delete 
    from
        comment_likes 
    where
        comment_id=?
2025-07-15T20:40:52.702+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:40:52.705+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:52.708+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:52.709+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:40:52.710+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:40:52.711+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:40:52.714+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:52.717+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:40:52.718+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        comment_likes
        (comment_id, user_id) 
    values
        (?, ?)
2025-07-15T20:40:53.074+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing DELETE /api/posts/comments/10/like
2025-07-15T20:40:53.078+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:53.081+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:53.082+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured DELETE /api/posts/comments/10/like
2025-07-15T20:40:53.084+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.c.CommentActionController          : 댓글 좋아요 취소 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:40:53.085+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:40:53.087+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:53.088+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:40:53.089+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    delete 
    from
        comment_likes 
    where
        comment_id=?
2025-07-15T20:40:54.713+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T20:40:54.714+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:40:54.714+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/comments?page=0&size=10
2025-07-15T20:40:54.716+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/23/comments?page=0&size=10
2025-07-15T20:40:54.717+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:54.718+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:54.719+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/23/comments?page=0&size=10
2025-07-15T20:40:54.720+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 23, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:40:54.721+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:40:54.724+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:54.727+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:40:54.729+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:40:54.734+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:40:54.737+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:40:55.363+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/23/like
2025-07-15T20:40:55.363+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:40:55.363+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/23/like
2025-07-15T20:40:55.365+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/23/like
2025-07-15T20:40:55.366+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:40:55.368+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:40:55.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/23/like
2025-07-15T20:40:55.370+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 23, 사용자: domo@gmail.com
2025-07-15T20:40:55.371+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:40:55.377+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:40:55.380+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:40:55.382+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:42:35.075+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:42:35.075+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:42:35.075+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:42:35.075+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:42:35.095+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:35.095+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:35.095+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:35.095+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:35.106+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:35.106+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:35.106+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:35.106+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:35.108+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:42:35.108+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:42:35.108+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:42:35.108+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:42:35.110+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:42:35.110+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:42:35.110+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:42:35.111+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:42:35.111+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:42:35.111+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:42:35.114+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:35.114+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:42:35.118+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:42:35.118+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:42:35.119+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:42:35.301+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:42:35.313+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:42:35.314+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.317+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.318+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:42:35.318+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:42:35.324+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:42:35.320+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.325+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.331+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.333+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:42:35.344+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.356+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:42:35.356+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:42:35.356+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.369+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.401+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:42:35.403+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.405+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.409+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.409+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.413+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:42:35.450+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.453+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:42:35.454+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.488+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.503+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.516+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.520+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.599+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.640+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.640+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.656+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.658+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.660+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.663+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.664+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.665+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.665+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.672+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.679+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.680+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.689+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.695+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.697+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.701+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:35.702+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:35.706+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:42:38.472+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:42:38.472+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/24
2025-07-15T20:42:38.472+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-07-15T20:42:38.472+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured OPTIONS /api/posts/24
2025-07-15T20:42:38.478+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24
2025-07-15T20:42:38.482+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:38.482+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:38.486+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:38.486+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:38.487+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24
2025-07-15T20:42:38.487+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:42:38.489+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.PostController     : 게시글 조회 요청: postId=24
2025-07-15T20:42:38.489+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:42:38.490+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:42:38.490+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:42:38.496+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:42:38.499+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:42:38.501+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:42:39.761+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:42:39.772+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:39.775+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:39.776+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:42:39.777+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:42:39.779+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:42:39.782+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:42:39.788+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:42:39.793+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:42:40.586+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:42:40.589+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:40.592+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:40.594+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:42:40.596+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:42:40.598+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:42:40.601+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:42:40.604+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:42:40.607+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:42:41.648+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:42:41.651+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:41.653+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:41.654+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:42:41.655+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:42:41.656+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:42:41.658+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:42:41.660+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:42:41.661+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:42:58.052+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:42:58.107+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:42:58.116+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:42:58.116+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:42:58.119+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:42:58.120+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:42:58.123+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:42:58.126+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:42:58.128+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        comment_likes
        (comment_id, user_id) 
    values
        (?, ?)
2025-07-15T20:43:00.247+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:43:00.247+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24
2025-07-15T20:43:00.248+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:43:00.248+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:43:00.249+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:43:00.249+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:43:00.249+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24
2025-07-15T20:43:00.249+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:43:00.250+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.PostController     : 게시글 조회 요청: postId=24
2025-07-15T20:43:00.250+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:43:00.250+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:43:00.251+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:43:00.252+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:43:00.253+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:43:00.254+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:43:20.160+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:43:20.182+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:43:20.187+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:43:20.190+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:43:20.194+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:43:20.197+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:43:20.199+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:43:20.200+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:45:03.201+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/tags
2025-07-15T20:45:03.201+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/tags/popular?limit=10
2025-07-15T20:45:03.201+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=10
2025-07-15T20:45:03.201+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/user/me
2025-07-15T20:45:03.258+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:03.267+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:03.268+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:03.269+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:03.284+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:03.284+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:03.285+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/user/me
2025-07-15T20:45:03.286+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/tags/popular?limit=10
2025-07-15T20:45:03.298+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.server.controller.MyPageController   : 내 정보 조회 요청: domo@gmail.com
2025-07-15T20:45:03.299+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:03.299+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:03.301+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=10
2025-07-15T20:45:03.302+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/tags
2025-07-15T20:45:03.304+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.TagController      : 전체 태그 목록 조회
2025-07-15T20:45:03.304+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.b.server.controller.TagController      : 인기 태그 조회 (상위 10개)
2025-07-15T20:45:03.309+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.server.controller.PostController     : 전체 게시글 목록 조회 요청: page=0, size=10
2025-07-15T20:45:03.310+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] c.bootcampbox.server.service.TagService  : 인기 태그 조회 (상위 10개)
2025-07-15T20:45:03.310+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.bootcampbox.server.service.TagService  : 전체 태그 목록 조회
2025-07-15T20:45:03.311+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0 
    join
        post_tags p1_0 
            on t1_0.id=p1_0.tag_id 
    group by
        t1_0.id 
    order by
        count(p1_0.post_id) desc
2025-07-15T20:45:03.312+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:03.316+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.name,
        t1_0.tag_type 
    from
        tags t1_0
2025-07-15T20:45:03.327+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?
2025-07-15T20:45:03.329+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.330+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.351+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:45:03.372+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:45:03.373+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        count(c1_0.id) 
    from
        comments c1_0 
    where
        c1_0.user_id=?
2025-07-15T20:45:03.378+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:45:03.379+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.379+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.380+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-15T20:45:03.381+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        coalesce(sum(p1_0.like_count), 0) 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-07-15T20:45:03.390+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.401+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.402+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        count(b1_0.id) 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=?
2025-07-15T20:45:03.402+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        posts p1_0
2025-07-15T20:45:03.407+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.view_count 
    from
        posts p1_0 
    where
        p1_0.user_id=? 
    order by
        p1_0.created_at desc,
        p1_0.id desc 
    limit
        1
2025-07-15T20:45:03.407+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.407+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.409+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    where
        pl1_0.user_id=? 
    order by
        pl1_0.created_at desc
2025-07-15T20:45:03.410+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:45:03.415+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.created_at,
        b1_0.post_id,
        b1_0.user_id 
    from
        bookmarks b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.created_at desc
2025-07-15T20:45:03.423+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.426+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.431+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.431+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.433+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.433+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.433+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.435+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.435+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.435+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.437+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.438+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.438+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.438+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.440+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.441+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.441+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.441+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.443+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.444+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.446+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.447+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.450+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:03.450+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.451+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.452+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.454+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.456+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:03.458+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.tag_id,
        p1_1.id,
        p1_1.anonymous_nickname,
        p1_1.author_user_type,
        p1_1.comment_count,
        p1_1.content,
        p1_1.created_at,
        p1_1.is_anonymous,
        p1_1.like_count,
        p1_1.report_count,
        p1_1.title,
        p1_1.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_1.view_count 
    from
        post_tags p1_0 
    join
        posts p1_1 
            on p1_1.id=p1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=p1_1.user_id 
    where
        p1_0.tag_id=?
2025-07-15T20:45:06.057+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:45:06.057+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24
2025-07-15T20:45:06.059+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:06.060+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:06.061+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:06.061+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:06.061+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:45:06.061+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24
2025-07-15T20:45:06.062+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.server.controller.PostController     : 게시글 조회 요청: postId=24
2025-07-15T20:45:06.062+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:45:06.062+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:45:06.062+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:45:06.063+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:06.064+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:06.065+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:45:08.744+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:45:08.746+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:08.748+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:08.749+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:45:08.751+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:45:08.752+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:45:08.755+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:08.758+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:45:08.759+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-7] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-07-15T20:45:09.966+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:45:09.970+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:09.972+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:09.974+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:45:09.976+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:45:09.977+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:45:09.979+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:09.979+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-3] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:45:11.847+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24
2025-07-15T20:45:11.847+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:45:11.849+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:11.850+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:11.851+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:11.851+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:11.852+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24
2025-07-15T20:45:11.852+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/24/comments?page=0&size=10
2025-07-15T20:45:11.852+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] c.b.server.controller.PostController     : 게시글 조회 요청: postId=24
2025-07-15T20:45:11.852+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] c.b.server.controller.CommentController  : 댓글 목록 조회 요청 - 게시글: 24, 페이지: 0, 크기: 10, 사용자: domo@gmail.com
2025-07-15T20:45:11.853+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:45:11.853+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.post_id=? 
        and c1_0.parent_id is null 
    order by
        c1_0.created_at desc 
    limit
        ?
2025-07-15T20:45:11.853+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-5] org.hibernate.SQL                        : 
    select
        t1_0.post_id,
        t1_1.id,
        t1_1.name,
        t1_1.tag_type 
    from
        post_tags t1_0 
    join
        tags t1_1 
            on t1_1.id=t1_0.tag_id 
    where
        t1_0.post_id=?
2025-07-15T20:45:11.854+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:11.855+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.parent_id=? 
    order by
        c1_0.created_at
2025-07-15T20:45:12.829+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/comments/10/like
2025-07-15T20:45:12.832+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:12.838+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:12.841+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/comments/10/like
2025-07-15T20:45:12.845+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] c.b.s.c.CommentActionController          : 댓글 좋아요 요청 - 댓글: 10, 사용자: domo@gmail.com
2025-07-15T20:45:12.846+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.parent_id,
        c1_0.post_id,
        c1_0.report_count,
        c1_0.updated_at,
        c1_0.user_id 
    from
        comments c1_0 
    where
        c1_0.id=?
2025-07-15T20:45:12.849+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:12.850+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-10] org.hibernate.SQL                        : 
    select
        lu1_0.comment_id,
        lu1_1.id,
        lu1_1.address,
        lu1_1.address_detail,
        lu1_1.boyfriend_branch,
        lu1_1.boyfriend_discharge_date,
        lu1_1.boyfriend_enlist_date,
        lu1_1.boyfriend_rank,
        lu1_1.boyfriend_unit,
        lu1_1.branch,
        lu1_1.created_at,
        lu1_1.discharge_date,
        lu1_1.email,
        lu1_1.enlist_date,
        lu1_1.fcm_token,
        lu1_1.is_active,
        lu1_1.military_rank,
        lu1_1.nickname,
        lu1_1.password,
        lu1_1.phone_number,
        lu1_1.role,
        lu1_1.total_bookmarks,
        lu1_1.total_comments,
        lu1_1.total_given_likes,
        lu1_1.total_posts,
        lu1_1.total_received_likes,
        lu1_1.unit,
        lu1_1.updated_at,
        lu1_1.user_type,
        lu1_1.username,
        lu1_1.zipcode 
    from
        comment_likes lu1_0 
    join
        users lu1_1 
            on lu1_1.id=lu1_0.user_id 
    where
        lu1_0.comment_id=?
2025-07-15T20:45:16.376+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/posts/24/like
2025-07-15T20:45:16.380+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.email=?
2025-07-15T20:45:16.383+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.service.CustomUserDetailsService   : UserDetails 생성 - email: domo@gmail.com, password: $2a$10$V59Ettu2chGFX/lP9W39leZtWxqG.gjpReb.HZyFhyYa.klHR3JtO, authorities: [ROLE_USER]
2025-07-15T20:45:16.385+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/posts/24/like
2025-07-15T20:45:16.386+09:00  INFO 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.controller.PostActionController    : 게시글 좋아요 요청 - 게시글: 24, 사용자: domo@gmail.com
2025-07-15T20:45:16.387+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.anonymous_nickname,
        p1_0.author_user_type,
        p1_0.comment_count,
        p1_0.content,
        p1_0.created_at,
        p1_0.is_anonymous,
        p1_0.like_count,
        p1_0.report_count,
        p1_0.title,
        p1_0.updated_at,
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode,
        p1_0.view_count 
    from
        posts p1_0 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.id=?
2025-07-15T20:45:16.390+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.address,
        u1_0.address_detail,
        u1_0.boyfriend_branch,
        u1_0.boyfriend_discharge_date,
        u1_0.boyfriend_enlist_date,
        u1_0.boyfriend_rank,
        u1_0.boyfriend_unit,
        u1_0.branch,
        u1_0.created_at,
        u1_0.discharge_date,
        u1_0.email,
        u1_0.enlist_date,
        u1_0.fcm_token,
        u1_0.is_active,
        u1_0.military_rank,
        u1_0.nickname,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.total_bookmarks,
        u1_0.total_comments,
        u1_0.total_given_likes,
        u1_0.total_posts,
        u1_0.total_received_likes,
        u1_0.unit,
        u1_0.updated_at,
        u1_0.user_type,
        u1_0.username,
        u1_0.zipcode 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-15T20:45:16.393+09:00 DEBUG 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] org.hibernate.SQL                        : 
    select
        pl1_0.id,
        pl1_0.created_at,
        pl1_0.post_id,
        pl1_0.user_id 
    from
        post_likes pl1_0 
    left join
        posts p1_0 
            on p1_0.id=pl1_0.post_id 
    left join
        users u1_0 
            on u1_0.id=pl1_0.user_id 
    where
        p1_0.id=? 
        and u1_0.id=?
2025-07-15T20:45:16.396+09:00 ERROR 75367 --- [rookie_px_server] [http-nio-0.0.0.0-8080-exec-2] c.b.s.controller.PostActionController    : 게시글 좋아요 오류: 

java.lang.RuntimeException: 이미 좋아요를 눌렀습니다.
	at com.bootcampbox.server.service.PostActionService.likePost(PostActionService.java:35) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.service.PostActionService$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at com.bootcampbox.server.controller.PostActionController.likePost(PostActionController.java:29) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.bootcampbox.server.controller.PostActionController$$SpringCGLIB$$0.likePost(<generated>) ~[main/:na]
	at jdk.internal.reflect.GeneratedMethodAccessor85.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.bootcampbox.server.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71) ~[main/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

